import org.gradle.api.initialization.resolve.RepositoriesMode

pluginManagement {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
}

rootProject.name = 'code'
include 'platform'
include 'JCache'
include 'kafka'
include 'ps'
include 'ds'
include 'mongodb'
include 'practices'
include 'poc'
include 'utils'
include 'zookeeper'
include 'codegen'

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven {
            url 'https://packages.confluent.io/maven/'
        }
    }

    versionCatalogs {
        libs {
            version('checkstyle', '9.0')
            version('lombok', '1.18.24')
            version('jupiter', '5.8.1')
            version('log4j2', '2.19.0')
            version('sl4j', '2.0.2')
            version('hamcrest', '2.2')
            version('jmh', '1.35')
            version('google.guava', '31.1-jre')
            version('confluent', '5.3.0')
            version('apache.avro', '1.11.1')
            version('apache.kafka', '3.2.1')
            version('assertj', '3.21.0')
            library('lombok', 'org.projectlombok', 'lombok').versionRef('lombok')
            library('jupiter', 'org.junit.jupiter', 'junit-jupiter-api').versionRef("jupiter")
            library('jupiter-engine', 'org.junit.jupiter', 'junit-jupiter-engine').versionRef("jupiter")
            library('hamcrest', 'org.hamcrest', 'hamcrest').versionRef('hamcrest')
            library('sl4j', 'org.slf4j', 'slf4j-api').versionRef('sl4j')
            library('sl4j-simple', 'org.slf4j', 'slf4j-simple').versionRef('sl4j')
            library('log4j2-sl4j', 'org.apache.logging.log4j', 'log4j-slf4j-impl').versionRef('log4j2')
            library('log4j2-core', 'org.apache.logging.log4j', 'log4j-core').versionRef('log4j2')
            library('log4j2-api', 'org.apache.logging.log4j', 'log4j-api').versionRef('log4j2')
            library('jmh-core', 'org.openjdk.jmh', 'jmh-core').versionRef('jmh')
            library('jmh-annotation-procesor', 'org.openjdk.jmh', 'jmh-generator-annprocess').versionRef('jmh')
            library('google.guava', 'com.google.guava', 'guava').versionRef('google.guava')
            library('kafka-serializer-confluent', 'io.confluent', 'kafka-avro-serializer').versionRef('confluent')
            library('apache-avro', 'org.apache.avro', 'avro').versionRef('apache.avro')
            library('apache-kafka', 'org.apache.kafka','connect-api').versionRef('apache.kafka')
            library('assertj', 'org.assertj', 'assertj-core').versionRef('assertj')
            bundle('sl4j-log4j2', ['sl4j', 'sl4j-simple', 'log4j2-sl4j', 'log4j2-core', 'log4j2-api'])

            plugin('avro', 'com.github.davidmc24.gradle.plugin.avro').version('1.5.0')
        }
    }
}

