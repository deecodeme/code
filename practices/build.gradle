plugins {
    id 'tools-conventions'
    id 'java-conventions'
    id 'spring-conventions'
}

// https://docs.gradle.org/current/userguide/building_java_projects.html#sec:java_source_sets
sourceSets {
    jmh {
        java.srcDirs = ['src/jmh/java']
        resources.srcDirs = ['src/jmh/resources']
        compileClasspath += sourceSets.main.runtimeClasspath
    }
}

dependencies {
    implementation project(':ds')
    implementation 'org.reflections:reflections:0.10.2'
    jmhImplementation(libs.jmh.core)
    jmhAnnotationProcessor(libs.jmh.annotation.procesor)
    implementation 'org.eclipse.jdt:core:3.3.0-v_771'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-core:1.10.6'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.10.6'
    implementation 'io.micrometer:micrometer-registry-jmx:1.10.6'
    implementation 'io.github.openfeign:feign-core:11.7'
    implementation 'io.github.openfeign:feign-jackson:11.7'
    implementation 'io.github.openfeign:feign-okhttp:11.7'
    implementation 'io.github.resilience4j:resilience4j-feign:1.7.0'
    implementation 'io.github.resilience4j:resilience4j-all:1.7.0'
}

configurations.all {
    //these exclusions to use SL4J with Log4j2
    exclude group:"ch.qos.logback", module:"logback-core"
    exclude group: "org.apache.logging.log4j", module: "log4j-slf4j-impl"
    exclude group: "org.springframework.boot", module:"spring-boot-starter-logging"
}

bootJar {
    enabled = true
}

// set up jmh task. Run from parent directory ./gradlew :practices:jmh
// https://docs.gradle.org/current/dsl/org.gradle.api.tasks.JavaExec.html
task jmh(type: JavaExec, dependsOn: jmhClasses) {
    main = 'org.openjdk.jmh.Main'
    classpath = sourceSets.jmh.compileClasspath + sourceSets.jmh.runtimeClasspath
}

// to make sure benchmarks always get compiled
classes.finalizedBy(jmhClasses)